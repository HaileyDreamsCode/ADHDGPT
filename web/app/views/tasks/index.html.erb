<script>
document.addEventListener('DOMContentLoaded', () => {
    const submitButton = document.querySelector('#generate');
    const form = document.querySelector('#goal_form');
    const detailedGoals = document.querySelector('#detailed_goals');
    const markdownGoals = document.querySelector('#markdown');
    const copyButton = document.querySelector("#copy");
    
    copyButton.addEventListener('click', async (event) => {
      navigator.clipboard.writeText(markdownGoals.innerText);
      copyButton.innerText = "Copied!";
    });

    form.addEventListener('submit', async (event) => {
        event.preventDefault();
        submitButton.disabled = true;
        detailedGoals.innerHTML = 'Loading... This will take a while. Probably 30 seconds to 2 minutes';

        const response = await fetch('/tasks', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({ initial_goal: document.querySelector('#initial_goal').value })
        }).then(async (response) => {
            if (response.ok) {
                const data = await response.json();
                detailedGoals.innerHTML = data['generated_tasks_html'];
                markdownGoals.innerText = data['generated_tasks'];

                copyButton.disabled = false;
                copyButton.innerText = "Copy results as Markdown";
                console.log(data);
            } else {
                detailedGoals.innerHTML = 'Something went wrong. Please try again later.';
            }
            submitButton.disabled = false;
        },
        (error) => {
            detailedGoals.innerHTML = 'Something went wrong. Please try again later. Technical details: promise rejected.';
        });
 });
});
</script>

<style>

header {
  font-size: x-large;
}

section#detailed_goals {
  font-size: large;
}

header {
  padding: 0;
  --line-height: 1;
}
</style>

<header>
  <h1>ADHDGpt</h1>
  <h2>Executive function as a service</h2>
</header>

<main style="padding: 0.5rem;">
<section id="ideas">
<%= form_with id: "goal_form" do |form| %>
    <%= form.text_field :initial_goal, placeholder: 'e.g. Clean my bathroom' %>
    <%= form.submit "Generate", id: "generate" %>
<% end %>
</section>

<hr style="margin: 2rem;">

<section>
<button disabled id="copy" value="Copy results to clipboard">Copy results as Markdown</button>
<p id="detailed_goals">
Type something you've been having trouble getting done above and ADHDGpt will generate you some easy-to-follow instructions! Note that things typed into this box are not logged by me, though OpenAI may use the query and results to train their algorithms (I have no control over this).
</p>
</section>
<input type="text" id="markdown" style="display:none;"></input>
</main>

